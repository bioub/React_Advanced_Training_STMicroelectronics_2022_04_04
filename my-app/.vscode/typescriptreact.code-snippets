{
	// Place your my-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Class Component": {
		"scope": "typescriptreact",
		"prefix": "cc",
		"body": [
			"import React, { Component } from 'react';",
			"",
			"class $TM_FILENAME_BASE extends Component {",
			"  render() {",
			"    return (",
			"      <div className=\"$TM_FILENAME_BASE\">",
			"        ${1:$TM_FILENAME_BASE Component}",
			"      </div>",
			"    );",
			"  }",
			"}",
			"",
			"export default $TM_FILENAME_BASE;",
			""
		],
		"description": "Create a new class component"
	},
	"Function Component": {
		"scope": "typescriptreact",
		"prefix": "fc",
		"body": [
			"import React from 'react';",
			"",
      "function $TM_FILENAME_BASE() {",
      "  return (",
      "    <div className=\"$TM_FILENAME_BASE\">",
      "      ${1:$TM_FILENAME_BASE Component}",
      "    </div>",
      "  );",
      "}",
      "",
      "export default $TM_FILENAME_BASE;",
      ""
		],
		"description": "Create a new function component"
	}
}